%
% This work is licensed under the Creative Commons
% Attribution-Noncommercial-Share Alike 3.0 Germany License. To view a copy of
% this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/de/ or
% send a letter to Creative Commons, 171 Second Street, Suite 300, San
% Francisco, California, 94105, USA.
%
% CC by-nc-sa; 2008 by Arne Wichmann
%              2008 by Gesche Jonas
%
if unknown obase: input obase fi

code:=64;

picture buf;

def defaultpoints = 
	pair ll,lr,ul,ur;
	ll := origin;
	lr := (w,0);
	ul := (0,h);
	ur := (w,h);

	pair center; center=0.5[origin,(w,h)];

	z101=(0,h/2);
	z102=(w,h/2);
	z103=(w/2,0);
	z104=(w/2,h);
	labels (range 101 thru 104);
	labels (ll,lr,ul,ur,center);
enddef;



%beginchar(incr code,(xpart bbox)*u#,(ypart bbox)*u#,0);
%	defaultpoints;
%	blatteins(ll,right,center,ur);
%endchar;
%
%beginchar(incr code,(xpart bbox)*u#,(ypart bbox)*u#,0);
%	defaultpoints;
%	blattzwei(ll,right,center,ur);
%endchar;

numeric wankel,blattwinkel,zweigansatz,zentrum;

wankel = 30;
blattwinkel = -20;
zweigansatz = 1/6;
zentrum = 3/4;

beginchar("2",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	pickup defaultpen;

	path p;
	p := z102{dir (180-wankel)} .. {dir (180 + wankel)}z101;
	draw p;

	z1 = point zweigansatz of p;

	z20 = p intersectionpoint ((w/2,0) .. (w/2,h));
	%x2 = w/2; y2 = zentrum[y20,h];
	z2 = zentrum[z20,(w/2,h)];

%	z3 = (origin .. infinity[origin,dir(180-blattwinkel)]) shifted z1 intersectionpoint (ll -- ul -- ur);
	z3 = (origin .. (length(w,h))[origin,dir(180-blattwinkel)]) shifted z2 intersectionpoint (ll -- ul -- ur);

	blatteins(z1,direction zweigansatz of p,z2,z3);

	buf:= currentpicture;

	if mode = 1:
		grid(32);
	fi;
endchar;
beginchar("1",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf reflectedabout (z101,z102);
endchar;
beginchar("3",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf reflectedabout (z103,z104);
endchar;
beginchar("4",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf reflectedabout (z103,z104) reflectedabout (z101,z102);
endchar;

beginchar("5",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,270) reflectedabout (z103,z104);
endchar;
beginchar("6",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,270);
endchar;
beginchar("7",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,90) reflectedabout (z103,z104);
endchar;
beginchar("8",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,90);
endchar;

beginchar("a",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	pickup defaultpen;
	path p;
	p := z103{dir (90+wankel)} .. {dir (-wankel)}z102;
	draw p;

	z1 = point zweigansatz of reverse p;

	z20 = p intersectionpoint ((w,0) .. (0,h));
	z2 = zentrum[z20,(w/2,h)];

	z3 = (origin .. (length(w,h))[origin,dir(180-blattwinkel)]) shifted z2 intersectionpoint (ll -- ul -- ur);
	blatteins(z1,direction zweigansatz of reverse p,z2,z3);

	labels(range 1 thru 99);

	buf:= currentpicture;
	draw p;
endchar;
beginchar("b",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,-90);
endchar;
beginchar("c",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,-180);
endchar;
beginchar("d",(xpart bbox)*u#,(ypart bbox)*u#,0);
	defaultpoints;
	currentpicture := buf rotatedabout (center,-270);
endchar;

end

